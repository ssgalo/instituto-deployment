services:
  frontend:
    build:
      context: ../instituto-asistencias-front
      args:
        - VITE_API_BASE_URL=${VITE_API_BASE_URL}
    volumes:
      - frontend-build:/app

  backend:
    build:
      context: ../InstitutoAdv.API
    container_name: instituto-backend
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - CORS_ORIGINS=${CORS_ORIGINS}
      - MYSQL_CONNECTION_STRING=Server=database;Port=3306;Database=${MYSQL_DATABASE};Uid=${MYSQL_USER};Pwd=${MYSQL_PASSWORD};
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    depends_on:
      database:
        condition: service_healthy

  database:
    image: mysql:8.0
    container_name: instituto-mysql
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - "3307:3306" 
    volumes:
      - db-data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d

  nginx:
    build: ./nginx
    container_name: instituto-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - frontend-build:/usr/share/nginx/html
    depends_on:
      - frontend
      - backend

volumes:
  db-data:
  frontend-build:
