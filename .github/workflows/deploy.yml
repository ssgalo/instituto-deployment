name: Deploy to VPS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Add VPS to known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_HOST_KEY }}" > ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            export DEPLOY_DIR=~/instituto-deployment
            export FRONTEND_DIR=~/instituto-asistencias-front
            export BACKEND_DIR=~/InstitutoAdv.API

            if [ -d "$DEPLOY_DIR" ]; then
              echo ">>> Actualizando repositorio de despliegue..."
              cd $DEPLOY_DIR && git pull
            else
              echo ">>> Clonando repositorio de despliegue..."
              git clone git@github.com:tu-usuario/instituto-deployment.git $DEPLOY_DIR
            fi
            
            if [ -d "$FRONTEND_DIR" ]; then
              echo ">>> Actualizando repositorio del frontend..."
              cd $FRONTEND_DIR && git pull
            else
              echo ">>> Clonando repositorio del frontend..."
              git clone git@github.com:tu-usuario/instituto-asistencias-front.git $FRONTEND_DIR
            fi

            if [ -d "$BACKEND_DIR" ]; then
              echo ">>> Actualizando repositorio del backend..."
              cd $BACKEND_DIR && git pull
            else
              echo ">>> Clonando repositorio del backend..."
              git clone git@github.com:tu-usuario/InstitutoAdv.API.git $BACKEND_DIR
            fi

            echo ">>> Navegando al directorio de despliegue..."
            cd $DEPLOY_DIR
            
            echo ">>> Creando archivo .env..."
            echo "${{ secrets.ENV_FILE_CONTENT }}" > .env
            
            echo ">>> Desplegando con Docker Compose..."
            docker compose up --build -d
            
            echo ">>> Limpiando imágenes de Docker no utilizadas..."
            docker image prune -f
            
            echo ">>> ¡Despliegue completado!"

